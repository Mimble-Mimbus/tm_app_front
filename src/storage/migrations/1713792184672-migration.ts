import { MigrationInterface, QueryRunner } from "typeorm/browser";

export class Migration1713792184672 implements MigrationInterface {
    name = 'Migration1713792184672'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "entertainment_reservation" ("name" varchar(255) NOT NULL, "email" varchar(255) NOT NULL, "phoneNumber" varchar(255) NOT NULL, "booking" integer NOT NULL, "id" integer PRIMARY KEY NOT NULL, "entertainmentScheduleId" integer)`);
        await queryRunner.query(`CREATE TABLE "entertainment_schedule" ("duration" integer, "start" varchar NOT NULL, "isCanceled" boolean NOT NULL DEFAULT (false), "availableSeats" integer NOT NULL, "id" integer PRIMARY KEY NOT NULL, "entertainementId" integer)`);
        await queryRunner.query(`CREATE TABLE "entertainment_type" ("id" integer PRIMARY KEY NOT NULL, "name" varchar(255) NOT NULL, "description" text)`);
        await queryRunner.query(`CREATE TABLE "quest" ("id" integer PRIMARY KEY NOT NULL, "eventId" integer, "zoneId" integer)`);
        await queryRunner.query(`CREATE TABLE "open_day" ("id" integer PRIMARY KEY NOT NULL, "dayStart" varchar NOT NULL, "dayEnd" varchar NOT NULL, "eventId" integer)`);
        await queryRunner.query(`CREATE TABLE "price" ("id" integer PRIMARY KEY NOT NULL, "value" integer NOT NULL, "priceCondition" varchar, "paymentableId" integer)`);
        await queryRunner.query(`CREATE TABLE "type_paymentable" ("id" integer PRIMARY KEY NOT NULL, "name" varchar(255) NOT NULL)`);
        await queryRunner.query(`CREATE TABLE "paymentable" ("id" integer PRIMARY KEY NOT NULL, "name" varchar(255) NOT NULL, "eventId" integer, "typePaymentableId" integer)`);
        await queryRunner.query(`CREATE TABLE "transit" ("id" integer PRIMARY KEY NOT NULL, "name" varchar(255) NOT NULL, "address" varchar(255) NOT NULL, "availableSeats" integer NOT NULL, "start" varchar NOT NULL, "arrival" varchar NOT NULL, "eventId" integer)`);
        await queryRunner.query(`CREATE TABLE "rpg_reservation" ("name" varchar(255) NOT NULL, "email" varchar(255) NOT NULL, "phoneNumber" varchar(255) NOT NULL, "booking" integer NOT NULL, "id" integer PRIMARY KEY NOT NULL, "rpgTableId" integer)`);
        await queryRunner.query(`CREATE TABLE "rpg_table" ("duration" integer, "start" varchar NOT NULL, "isCanceled" boolean NOT NULL DEFAULT (false), "availableSeats" integer NOT NULL, "id" integer PRIMARY KEY NOT NULL, "rpgActivityId" integer)`);
        await queryRunner.query(`CREATE TABLE "trigger_warning" ("id" integer PRIMARY KEY NOT NULL)`);
        await queryRunner.query(`CREATE TABLE "rpg" ("id" integer PRIMARY KEY NOT NULL, "description" text NOT NULL, "universe" varchar(255) NOT NULL, "publisher" varchar(255) NOT NULL, "name" varchar(255) NOT NULL)`);
        await queryRunner.query(`CREATE TABLE "tag" ("id" integer PRIMARY KEY NOT NULL)`);
        await queryRunner.query(`CREATE TABLE "user" ("id" integer PRIMARY KEY NOT NULL, "name" varchar NOT NULL)`);
        await queryRunner.query(`CREATE TABLE "rpg_activity" ("name" varchar(255) NOT NULL, "description" text NOT NULL, "maxNumberSeats" integer, "duration" integer, "onReservation" boolean NOT NULL DEFAULT (0), "isCanceled" boolean NOT NULL DEFAULT (0), "id" integer PRIMARY KEY NOT NULL, "rpgZoneId" integer, "rpgId" integer, "userId" integer)`);
        await queryRunner.query(`CREATE TABLE "rpg_zone" ("name" varchar(255) NOT NULL, "id" integer PRIMARY KEY NOT NULL, "eventId" integer)`);
        await queryRunner.query(`CREATE TABLE "event" ("id" integer PRIMARY KEY NOT NULL, "address" varchar(255) NOT NULL)`);
        await queryRunner.query(`CREATE TABLE "zone" ("name" varchar(255) NOT NULL, "id" integer PRIMARY KEY NOT NULL, "eventId" integer)`);
        await queryRunner.query(`CREATE TABLE "entertainment" ("name" varchar(255) NOT NULL, "description" text NOT NULL, "maxNumberSeats" integer, "duration" integer, "onReservation" boolean NOT NULL DEFAULT (0), "isCanceled" boolean NOT NULL DEFAULT (0), "id" integer PRIMARY KEY NOT NULL, "zoneId" integer, "entertainmentTypeId" integer)`);
        await queryRunner.query(`CREATE TABLE "ticket" ("id" integer PRIMARY KEY NOT NULL, "username" varchar NOT NULL, "email" varchar NOT NULL, "data" varchar NOT NULL)`);
        await queryRunner.query(`CREATE TABLE "temporary_entertainment_reservation" ("name" varchar(255) NOT NULL, "email" varchar(255) NOT NULL, "phoneNumber" varchar(255) NOT NULL, "booking" integer NOT NULL, "id" integer PRIMARY KEY NOT NULL, "entertainmentScheduleId" integer, CONSTRAINT "FK_28bf934b2f4cffa677e1480282d" FOREIGN KEY ("entertainmentScheduleId") REFERENCES "entertainment_schedule" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_entertainment_reservation"("name", "email", "phoneNumber", "booking", "id", "entertainmentScheduleId") SELECT "name", "email", "phoneNumber", "booking", "id", "entertainmentScheduleId" FROM "entertainment_reservation"`);
        await queryRunner.query(`DROP TABLE "entertainment_reservation"`);
        await queryRunner.query(`ALTER TABLE "temporary_entertainment_reservation" RENAME TO "entertainment_reservation"`);
        await queryRunner.query(`CREATE TABLE "temporary_entertainment_schedule" ("duration" integer, "start" varchar NOT NULL, "isCanceled" boolean NOT NULL DEFAULT (false), "availableSeats" integer NOT NULL, "id" integer PRIMARY KEY NOT NULL, "entertainementId" integer, CONSTRAINT "FK_cf1e51526e46dfb550fa89013ef" FOREIGN KEY ("entertainementId") REFERENCES "entertainment" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_entertainment_schedule"("duration", "start", "isCanceled", "availableSeats", "id", "entertainementId") SELECT "duration", "start", "isCanceled", "availableSeats", "id", "entertainementId" FROM "entertainment_schedule"`);
        await queryRunner.query(`DROP TABLE "entertainment_schedule"`);
        await queryRunner.query(`ALTER TABLE "temporary_entertainment_schedule" RENAME TO "entertainment_schedule"`);
        await queryRunner.query(`CREATE TABLE "temporary_quest" ("id" integer PRIMARY KEY NOT NULL, "eventId" integer, "zoneId" integer, CONSTRAINT "FK_6e3db865100724bac88e7b174c1" FOREIGN KEY ("eventId") REFERENCES "event" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_580a431e14a4ee49ecd1fdccde7" FOREIGN KEY ("zoneId") REFERENCES "zone" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_quest"("id", "eventId", "zoneId") SELECT "id", "eventId", "zoneId" FROM "quest"`);
        await queryRunner.query(`DROP TABLE "quest"`);
        await queryRunner.query(`ALTER TABLE "temporary_quest" RENAME TO "quest"`);
        await queryRunner.query(`CREATE TABLE "temporary_open_day" ("id" integer PRIMARY KEY NOT NULL, "dayStart" varchar NOT NULL, "dayEnd" varchar NOT NULL, "eventId" integer, CONSTRAINT "FK_d6cb130c1d5e32f87d4d0c455a0" FOREIGN KEY ("eventId") REFERENCES "event" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_open_day"("id", "dayStart", "dayEnd", "eventId") SELECT "id", "dayStart", "dayEnd", "eventId" FROM "open_day"`);
        await queryRunner.query(`DROP TABLE "open_day"`);
        await queryRunner.query(`ALTER TABLE "temporary_open_day" RENAME TO "open_day"`);
        await queryRunner.query(`CREATE TABLE "temporary_price" ("id" integer PRIMARY KEY NOT NULL, "value" integer NOT NULL, "priceCondition" varchar, "paymentableId" integer, CONSTRAINT "FK_1f19321dff24b1dd3410f0a7fce" FOREIGN KEY ("paymentableId") REFERENCES "paymentable" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_price"("id", "value", "priceCondition", "paymentableId") SELECT "id", "value", "priceCondition", "paymentableId" FROM "price"`);
        await queryRunner.query(`DROP TABLE "price"`);
        await queryRunner.query(`ALTER TABLE "temporary_price" RENAME TO "price"`);
        await queryRunner.query(`CREATE TABLE "temporary_paymentable" ("id" integer PRIMARY KEY NOT NULL, "name" varchar(255) NOT NULL, "eventId" integer, "typePaymentableId" integer, CONSTRAINT "FK_68a8c3477fa5a1e63c59ae44783" FOREIGN KEY ("eventId") REFERENCES "event" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_8de6a10d002862e63dd342b9a6c" FOREIGN KEY ("typePaymentableId") REFERENCES "type_paymentable" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_paymentable"("id", "name", "eventId", "typePaymentableId") SELECT "id", "name", "eventId", "typePaymentableId" FROM "paymentable"`);
        await queryRunner.query(`DROP TABLE "paymentable"`);
        await queryRunner.query(`ALTER TABLE "temporary_paymentable" RENAME TO "paymentable"`);
        await queryRunner.query(`CREATE TABLE "temporary_transit" ("id" integer PRIMARY KEY NOT NULL, "name" varchar(255) NOT NULL, "address" varchar(255) NOT NULL, "availableSeats" integer NOT NULL, "start" varchar NOT NULL, "arrival" varchar NOT NULL, "eventId" integer, CONSTRAINT "FK_683856451bad1d3f8263e0ee058" FOREIGN KEY ("eventId") REFERENCES "event" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_transit"("id", "name", "address", "availableSeats", "start", "arrival", "eventId") SELECT "id", "name", "address", "availableSeats", "start", "arrival", "eventId" FROM "transit"`);
        await queryRunner.query(`DROP TABLE "transit"`);
        await queryRunner.query(`ALTER TABLE "temporary_transit" RENAME TO "transit"`);
        await queryRunner.query(`CREATE TABLE "temporary_rpg_reservation" ("name" varchar(255) NOT NULL, "email" varchar(255) NOT NULL, "phoneNumber" varchar(255) NOT NULL, "booking" integer NOT NULL, "id" integer PRIMARY KEY NOT NULL, "rpgTableId" integer, CONSTRAINT "FK_bc507609a2cd5905548b3d56ee8" FOREIGN KEY ("rpgTableId") REFERENCES "rpg_table" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_rpg_reservation"("name", "email", "phoneNumber", "booking", "id", "rpgTableId") SELECT "name", "email", "phoneNumber", "booking", "id", "rpgTableId" FROM "rpg_reservation"`);
        await queryRunner.query(`DROP TABLE "rpg_reservation"`);
        await queryRunner.query(`ALTER TABLE "temporary_rpg_reservation" RENAME TO "rpg_reservation"`);
        await queryRunner.query(`CREATE TABLE "temporary_rpg_table" ("duration" integer, "start" varchar NOT NULL, "isCanceled" boolean NOT NULL DEFAULT (false), "availableSeats" integer NOT NULL, "id" integer PRIMARY KEY NOT NULL, "rpgActivityId" integer, CONSTRAINT "FK_4db42ff5be39dc5f967558ff607" FOREIGN KEY ("rpgActivityId") REFERENCES "rpg_activity" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_rpg_table"("duration", "start", "isCanceled", "availableSeats", "id", "rpgActivityId") SELECT "duration", "start", "isCanceled", "availableSeats", "id", "rpgActivityId" FROM "rpg_table"`);
        await queryRunner.query(`DROP TABLE "rpg_table"`);
        await queryRunner.query(`ALTER TABLE "temporary_rpg_table" RENAME TO "rpg_table"`);
        await queryRunner.query(`CREATE TABLE "temporary_rpg_activity" ("name" varchar(255) NOT NULL, "description" text NOT NULL, "maxNumberSeats" integer, "duration" integer, "onReservation" boolean NOT NULL DEFAULT (0), "isCanceled" boolean NOT NULL DEFAULT (0), "id" integer PRIMARY KEY NOT NULL, "rpgZoneId" integer, "rpgId" integer, "userId" integer, CONSTRAINT "FK_43adbbebefa529117f767d07593" FOREIGN KEY ("rpgZoneId") REFERENCES "rpg_zone" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_9c9700f32a962570a32b350bfb6" FOREIGN KEY ("rpgId") REFERENCES "rpg" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_c425bd8cff1d462e6867fda135d" FOREIGN KEY ("userId") REFERENCES "user" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_rpg_activity"("name", "description", "maxNumberSeats", "duration", "onReservation", "isCanceled", "id", "rpgZoneId", "rpgId", "userId") SELECT "name", "description", "maxNumberSeats", "duration", "onReservation", "isCanceled", "id", "rpgZoneId", "rpgId", "userId" FROM "rpg_activity"`);
        await queryRunner.query(`DROP TABLE "rpg_activity"`);
        await queryRunner.query(`ALTER TABLE "temporary_rpg_activity" RENAME TO "rpg_activity"`);
        await queryRunner.query(`CREATE TABLE "temporary_rpg_zone" ("name" varchar(255) NOT NULL, "id" integer PRIMARY KEY NOT NULL, "eventId" integer, CONSTRAINT "FK_7d9073268cf3b30f3e986db1511" FOREIGN KEY ("eventId") REFERENCES "event" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_rpg_zone"("name", "id", "eventId") SELECT "name", "id", "eventId" FROM "rpg_zone"`);
        await queryRunner.query(`DROP TABLE "rpg_zone"`);
        await queryRunner.query(`ALTER TABLE "temporary_rpg_zone" RENAME TO "rpg_zone"`);
        await queryRunner.query(`CREATE TABLE "temporary_zone" ("name" varchar(255) NOT NULL, "id" integer PRIMARY KEY NOT NULL, "eventId" integer, CONSTRAINT "FK_49f39598f875692670fe3121c1d" FOREIGN KEY ("eventId") REFERENCES "event" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_zone"("name", "id", "eventId") SELECT "name", "id", "eventId" FROM "zone"`);
        await queryRunner.query(`DROP TABLE "zone"`);
        await queryRunner.query(`ALTER TABLE "temporary_zone" RENAME TO "zone"`);
        await queryRunner.query(`CREATE TABLE "temporary_entertainment" ("name" varchar(255) NOT NULL, "description" text NOT NULL, "maxNumberSeats" integer, "duration" integer, "onReservation" boolean NOT NULL DEFAULT (0), "isCanceled" boolean NOT NULL DEFAULT (0), "id" integer PRIMARY KEY NOT NULL, "zoneId" integer, "entertainmentTypeId" integer, CONSTRAINT "FK_6d53117b9f6fba0e02e52762765" FOREIGN KEY ("zoneId") REFERENCES "zone" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION, CONSTRAINT "FK_b63b299048cb087543665115ceb" FOREIGN KEY ("entertainmentTypeId") REFERENCES "entertainment_type" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)`);
        await queryRunner.query(`INSERT INTO "temporary_entertainment"("name", "description", "maxNumberSeats", "duration", "onReservation", "isCanceled", "id", "zoneId", "entertainmentTypeId") SELECT "name", "description", "maxNumberSeats", "duration", "onReservation", "isCanceled", "id", "zoneId", "entertainmentTypeId" FROM "entertainment"`);
        await queryRunner.query(`DROP TABLE "entertainment"`);
        await queryRunner.query(`ALTER TABLE "temporary_entertainment" RENAME TO "entertainment"`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "entertainment" RENAME TO "temporary_entertainment"`);
        await queryRunner.query(`CREATE TABLE "entertainment" ("name" varchar(255) NOT NULL, "description" text NOT NULL, "maxNumberSeats" integer, "duration" integer, "onReservation" boolean NOT NULL DEFAULT (0), "isCanceled" boolean NOT NULL DEFAULT (0), "id" integer PRIMARY KEY NOT NULL, "zoneId" integer, "entertainmentTypeId" integer)`);
        await queryRunner.query(`INSERT INTO "entertainment"("name", "description", "maxNumberSeats", "duration", "onReservation", "isCanceled", "id", "zoneId", "entertainmentTypeId") SELECT "name", "description", "maxNumberSeats", "duration", "onReservation", "isCanceled", "id", "zoneId", "entertainmentTypeId" FROM "temporary_entertainment"`);
        await queryRunner.query(`DROP TABLE "temporary_entertainment"`);
        await queryRunner.query(`ALTER TABLE "zone" RENAME TO "temporary_zone"`);
        await queryRunner.query(`CREATE TABLE "zone" ("name" varchar(255) NOT NULL, "id" integer PRIMARY KEY NOT NULL, "eventId" integer)`);
        await queryRunner.query(`INSERT INTO "zone"("name", "id", "eventId") SELECT "name", "id", "eventId" FROM "temporary_zone"`);
        await queryRunner.query(`DROP TABLE "temporary_zone"`);
        await queryRunner.query(`ALTER TABLE "rpg_zone" RENAME TO "temporary_rpg_zone"`);
        await queryRunner.query(`CREATE TABLE "rpg_zone" ("name" varchar(255) NOT NULL, "id" integer PRIMARY KEY NOT NULL, "eventId" integer)`);
        await queryRunner.query(`INSERT INTO "rpg_zone"("name", "id", "eventId") SELECT "name", "id", "eventId" FROM "temporary_rpg_zone"`);
        await queryRunner.query(`DROP TABLE "temporary_rpg_zone"`);
        await queryRunner.query(`ALTER TABLE "rpg_activity" RENAME TO "temporary_rpg_activity"`);
        await queryRunner.query(`CREATE TABLE "rpg_activity" ("name" varchar(255) NOT NULL, "description" text NOT NULL, "maxNumberSeats" integer, "duration" integer, "onReservation" boolean NOT NULL DEFAULT (0), "isCanceled" boolean NOT NULL DEFAULT (0), "id" integer PRIMARY KEY NOT NULL, "rpgZoneId" integer, "rpgId" integer, "userId" integer)`);
        await queryRunner.query(`INSERT INTO "rpg_activity"("name", "description", "maxNumberSeats", "duration", "onReservation", "isCanceled", "id", "rpgZoneId", "rpgId", "userId") SELECT "name", "description", "maxNumberSeats", "duration", "onReservation", "isCanceled", "id", "rpgZoneId", "rpgId", "userId" FROM "temporary_rpg_activity"`);
        await queryRunner.query(`DROP TABLE "temporary_rpg_activity"`);
        await queryRunner.query(`ALTER TABLE "rpg_table" RENAME TO "temporary_rpg_table"`);
        await queryRunner.query(`CREATE TABLE "rpg_table" ("duration" integer, "start" varchar NOT NULL, "isCanceled" boolean NOT NULL DEFAULT (false), "availableSeats" integer NOT NULL, "id" integer PRIMARY KEY NOT NULL, "rpgActivityId" integer)`);
        await queryRunner.query(`INSERT INTO "rpg_table"("duration", "start", "isCanceled", "availableSeats", "id", "rpgActivityId") SELECT "duration", "start", "isCanceled", "availableSeats", "id", "rpgActivityId" FROM "temporary_rpg_table"`);
        await queryRunner.query(`DROP TABLE "temporary_rpg_table"`);
        await queryRunner.query(`ALTER TABLE "rpg_reservation" RENAME TO "temporary_rpg_reservation"`);
        await queryRunner.query(`CREATE TABLE "rpg_reservation" ("name" varchar(255) NOT NULL, "email" varchar(255) NOT NULL, "phoneNumber" varchar(255) NOT NULL, "booking" integer NOT NULL, "id" integer PRIMARY KEY NOT NULL, "rpgTableId" integer)`);
        await queryRunner.query(`INSERT INTO "rpg_reservation"("name", "email", "phoneNumber", "booking", "id", "rpgTableId") SELECT "name", "email", "phoneNumber", "booking", "id", "rpgTableId" FROM "temporary_rpg_reservation"`);
        await queryRunner.query(`DROP TABLE "temporary_rpg_reservation"`);
        await queryRunner.query(`ALTER TABLE "transit" RENAME TO "temporary_transit"`);
        await queryRunner.query(`CREATE TABLE "transit" ("id" integer PRIMARY KEY NOT NULL, "name" varchar(255) NOT NULL, "address" varchar(255) NOT NULL, "availableSeats" integer NOT NULL, "start" varchar NOT NULL, "arrival" varchar NOT NULL, "eventId" integer)`);
        await queryRunner.query(`INSERT INTO "transit"("id", "name", "address", "availableSeats", "start", "arrival", "eventId") SELECT "id", "name", "address", "availableSeats", "start", "arrival", "eventId" FROM "temporary_transit"`);
        await queryRunner.query(`DROP TABLE "temporary_transit"`);
        await queryRunner.query(`ALTER TABLE "paymentable" RENAME TO "temporary_paymentable"`);
        await queryRunner.query(`CREATE TABLE "paymentable" ("id" integer PRIMARY KEY NOT NULL, "name" varchar(255) NOT NULL, "eventId" integer, "typePaymentableId" integer)`);
        await queryRunner.query(`INSERT INTO "paymentable"("id", "name", "eventId", "typePaymentableId") SELECT "id", "name", "eventId", "typePaymentableId" FROM "temporary_paymentable"`);
        await queryRunner.query(`DROP TABLE "temporary_paymentable"`);
        await queryRunner.query(`ALTER TABLE "price" RENAME TO "temporary_price"`);
        await queryRunner.query(`CREATE TABLE "price" ("id" integer PRIMARY KEY NOT NULL, "value" integer NOT NULL, "priceCondition" varchar, "paymentableId" integer)`);
        await queryRunner.query(`INSERT INTO "price"("id", "value", "priceCondition", "paymentableId") SELECT "id", "value", "priceCondition", "paymentableId" FROM "temporary_price"`);
        await queryRunner.query(`DROP TABLE "temporary_price"`);
        await queryRunner.query(`ALTER TABLE "open_day" RENAME TO "temporary_open_day"`);
        await queryRunner.query(`CREATE TABLE "open_day" ("id" integer PRIMARY KEY NOT NULL, "dayStart" varchar NOT NULL, "dayEnd" varchar NOT NULL, "eventId" integer)`);
        await queryRunner.query(`INSERT INTO "open_day"("id", "dayStart", "dayEnd", "eventId") SELECT "id", "dayStart", "dayEnd", "eventId" FROM "temporary_open_day"`);
        await queryRunner.query(`DROP TABLE "temporary_open_day"`);
        await queryRunner.query(`ALTER TABLE "quest" RENAME TO "temporary_quest"`);
        await queryRunner.query(`CREATE TABLE "quest" ("id" integer PRIMARY KEY NOT NULL, "eventId" integer, "zoneId" integer)`);
        await queryRunner.query(`INSERT INTO "quest"("id", "eventId", "zoneId") SELECT "id", "eventId", "zoneId" FROM "temporary_quest"`);
        await queryRunner.query(`DROP TABLE "temporary_quest"`);
        await queryRunner.query(`ALTER TABLE "entertainment_schedule" RENAME TO "temporary_entertainment_schedule"`);
        await queryRunner.query(`CREATE TABLE "entertainment_schedule" ("duration" integer, "start" varchar NOT NULL, "isCanceled" boolean NOT NULL DEFAULT (false), "availableSeats" integer NOT NULL, "id" integer PRIMARY KEY NOT NULL, "entertainementId" integer)`);
        await queryRunner.query(`INSERT INTO "entertainment_schedule"("duration", "start", "isCanceled", "availableSeats", "id", "entertainementId") SELECT "duration", "start", "isCanceled", "availableSeats", "id", "entertainementId" FROM "temporary_entertainment_schedule"`);
        await queryRunner.query(`DROP TABLE "temporary_entertainment_schedule"`);
        await queryRunner.query(`ALTER TABLE "entertainment_reservation" RENAME TO "temporary_entertainment_reservation"`);
        await queryRunner.query(`CREATE TABLE "entertainment_reservation" ("name" varchar(255) NOT NULL, "email" varchar(255) NOT NULL, "phoneNumber" varchar(255) NOT NULL, "booking" integer NOT NULL, "id" integer PRIMARY KEY NOT NULL, "entertainmentScheduleId" integer)`);
        await queryRunner.query(`INSERT INTO "entertainment_reservation"("name", "email", "phoneNumber", "booking", "id", "entertainmentScheduleId") SELECT "name", "email", "phoneNumber", "booking", "id", "entertainmentScheduleId" FROM "temporary_entertainment_reservation"`);
        await queryRunner.query(`DROP TABLE "temporary_entertainment_reservation"`);
        await queryRunner.query(`DROP TABLE "ticket"`);
        await queryRunner.query(`DROP TABLE "entertainment"`);
        await queryRunner.query(`DROP TABLE "zone"`);
        await queryRunner.query(`DROP TABLE "event"`);
        await queryRunner.query(`DROP TABLE "rpg_zone"`);
        await queryRunner.query(`DROP TABLE "rpg_activity"`);
        await queryRunner.query(`DROP TABLE "user"`);
        await queryRunner.query(`DROP TABLE "tag"`);
        await queryRunner.query(`DROP TABLE "rpg"`);
        await queryRunner.query(`DROP TABLE "trigger_warning"`);
        await queryRunner.query(`DROP TABLE "rpg_table"`);
        await queryRunner.query(`DROP TABLE "rpg_reservation"`);
        await queryRunner.query(`DROP TABLE "transit"`);
        await queryRunner.query(`DROP TABLE "paymentable"`);
        await queryRunner.query(`DROP TABLE "type_paymentable"`);
        await queryRunner.query(`DROP TABLE "price"`);
        await queryRunner.query(`DROP TABLE "open_day"`);
        await queryRunner.query(`DROP TABLE "quest"`);
        await queryRunner.query(`DROP TABLE "entertainment_type"`);
        await queryRunner.query(`DROP TABLE "entertainment_schedule"`);
        await queryRunner.query(`DROP TABLE "entertainment_reservation"`);
    }

}
